{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/cv.coffee","controllers/empty.coffee","controllers/gallery.coffee","controllers/landing.coffee","controllers/order.coffee","controllers/program.coffee","controllers/reviews.coffee","controllers/stats.coffee","controllers/tutors.coffee","controllers/yachts.coffee","factory/factory.coffee","resources/resources.coffee","directives/academic-year.coffee","directives/digits-only.coffee","directives/errors.coffee","directives/in-view.coffee","directives/mark.coffee","directives/phone-field.coffee","directives/plural.coffee","directives/program.coffee","directives/request-form.coffee","service/phone.coffee","service/stream.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"App\", ['ngResource', 'angular-ladda', 'angularFileUpload', 'angular-toArrayFilter', 'thatisuday.ng-image-gallery', 'ngSanitize'])\n    .config [\n        'ngImageGalleryOptsProvider',\n        (ngImageGalleryOptsProvider) ->\n            ngImageGalleryOptsProvider.setOpts\n                bubbles         :   false\n                bubbleSize      :   100\n    ]\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n    ]\n    .config (laddaProvider) ->\n        laddaProvider.setOption\n            spinnerColor: '#83b060'\n    .filter 'cut', ->\n        (value, wordwise, max, tail = '') ->\n            return '' if not value\n            max = parseInt(max, 10)\n            return value if not max\n            return value if value.length <= max\n            value = value.substr(0, max)\n            if wordwise\n                lastspace = value.lastIndexOf(' ')\n                if lastspace isnt -1\n                  if value.charAt(lastspace-1) is '.' || value.charAt(lastspace-1) is ','\n                    lastspace = lastspace - 1\n                  value = value.substr(0, lastspace)\n            return value + tail\n    .filter 'hideZero', ->\n        (item) ->\n            if item > 0 then item else null\n    .run ($rootScope, $q, StreamService) ->\n        $rootScope.streamLink = streamLink\n        $rootScope.StreamService = StreamService\n\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n          # skip_values – какие значения в enum пропускать\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\n          # recursion – функция была запущена рекурсивно (внизу)\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\n            # если установлено значение, которое пропускается для обычных пользователей,\n            # то запрещать его смену\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n            # if in skip_values\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n        # обновить + ждать ответа от сервера\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n\n            update_data = {id: ngModel.id}\n            update_data[status] = status_id\n\n            Resource.update update_data, ->\n                ngModel[status] = statuses[status_id]\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            return '' if not date\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.formatDateFull = (date) ->\n            moment(date).format \"D MMMM YYYY\"\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.onEnter = (event, fun, prevent_default = true) ->\n            event.preventDefault() if prevent_default\n            fun() if event.keyCode is 13\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n\n        $rootScope.findById = (object, id) ->\n            _.findWhere(object, {id: parseInt(id)})\n\n        # prop2 – второй уровень вложенности\n        $rootScope.total = (array, prop, prop2 = false) ->\n            sum = 0\n            $.each array, (index, value) ->\n                v = value[prop]\n                v = v[prop2] if prop2\n                sum += v\n            sum\n\n        # сколько лет прошло с указанной даты\n        $rootScope.yearsPassed = (year) ->\n            moment().format(\"YYYY\") - year\n\n        $rootScope.deny = (ngModel, prop) ->\n            ngModel[prop] = +(!ngModel[prop])\n\n        $rootScope.closestMetro = (markers) ->\n            closest_metro = markers[0].metros[0]\n            markers.forEach (marker) ->\n                marker.metros.forEach (metro) ->\n                    closest_metro = metro if metro.minutes < closest_metro.minutes\n            closest_metro.station.title\n\n        $rootScope.closestMetros = (markers) ->\n            closest_metros = []\n            markers.forEach (marker, index) ->\n                closest_metros[index] = marker.metros[0]\n                marker.metros.forEach (metro) ->\n                    closest_metros[index] = metro if metro.minutes < closest_metros[index].minutes\n            closest_metros\n\n        $rootScope.photoUrl = (tutor) ->\n            if tutor and tutor.photo_exists\n                \"https://lk.ege-repetitor.ru/img/tutors/#{tutor.id}.#{tutor.photo_extension}\"\n            else\n                \"https://lk.ege-repetitor.ru/img/tutors/no-profile-img.gif\"\n\n        $rootScope.fullName = (tutor) ->\n            return tutor.last_name + ' ' + tutor.first_name + ' ' + tutor.middle_name\n\n        $rootScope.objectLength = (obj) -> Object.keys(obj).length\n\n        $rootScope.shortenGrades = (tutor) ->\n            if tutor.grades.length <= 3\n                grades = _.clone tutor.grades\n                if (grades.length > 1)\n                    last_grade = grades.pop()\n                grade_string = grades.join ', '\n                grade_string += ' и ' + last_grade if last_grade\n                return grade_string + if last_grade then ' классы' else ' класс'\n            else\n                a = _.clone tutor.grades\n                return if a.length < 1\n                limit = a.length - 1\n                combo_end = -1\n                pairs = []\n                i = 0\n                while i <= limit\n                    combo_start = parseInt(a[i])\n                    if combo_start > 11\n                        i++\n                        combo_end = -1\n                        pairs.push combo_start\n                        continue\n\n                    if combo_start <= combo_end\n                        i++\n                        continue\n\n                    j = i\n                    while j <= limit\n                        combo_end = parseInt(a[j])\n                        # если уже начинает искать по студентам\n                        break if combo_end >= 11\n                        break if parseInt(a[j + 1]) - combo_end > 1\n                        j++\n                    if combo_start != combo_end\n                        pairs.push combo_start + '–' + combo_end + ' классы'\n                    else\n                        pairs.push combo_start + ' класс'\n                    i++\n                return pairs.join ', '\n\n        $rootScope.countObj = (obj) ->\n            Object.keys(obj).length\n\n        $rootScope.formatBytes = (bytes) ->\n          if bytes < 1024\n            bytes + ' Bytes'\n          else if bytes < 1048576\n            (bytes / 1024).toFixed(1) + ' KB'\n          else if bytes < 1073741824\n            (bytes / 1048576).toFixed(1) + ' MB'\n          else\n            (bytes / 1073741824).toFixed(1) + ' GB'\n","# angular\n#     .module 'Egerep'\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             IndexService.init(Variable, $scope.current_page, $attrs)\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             FormService.init(Variable, $scope.id, $scope.model)\n","angular\n    .module 'App'\n    .controller 'Cv', ($scope, $timeout, $http, Subjects, Cv, StreamService) ->\n        bindArguments($scope, arguments)\n\n        $timeout ->\n            $scope.cv = {}\n            $scope.sent = false\n\n        $scope.send = ->\n            $scope.sending = true\n            $scope.errors = {}\n            Cv.save $scope.cv, ->\n                StreamService.run('tutor_cv', streamString())\n                $scope.sending = false\n                $scope.sent = true\n                $('body').animate scrollTop: $('.header').offset().top\n                dataLayerPush\n                    event: 'cv'\n                    # ecommerce:\n                    #     currencyCode: 'RUR'\n                    #     purchase:\n                    #         actionField:\n                    #             id: googleClientId()\n                    #         products: [\n                    #             # класс\n                    #             # brand: $scope.cv.grade\n                    #             # предметы_филиал\n                    #             category: (if $scope.cv.subjects then $scope.cv.subjects.sort().join(',') else '')\n                    #             quantity: 1\n                    #         ]\n            , (response) ->\n                $scope.sending = false\n                angular.forEach response.data, (errors, field) ->\n                    $scope.errors[field] = errors\n                    selector = \"[ng-model$='#{field}']\"\n                    $('html,body').animate({scrollTop: $(\"input#{selector}, textarea#{selector}\").first().offset().top}, 0)\n                    input = $(\"input#{selector}, textarea#{selector}\")\n                    input.focus()\n                    input.notify errors[0], notify_options if isMobile\n\n        streamString = ->\n            stream_string = []\n            # stream_string.push(\"class=#{$scope.cv.grade}\") if $scope.cv.grade\n            if $scope.cv.subjects\n                subj = []\n                $scope.cv.subjects.forEach (subject_id) -> subj.push(Subjects.short_eng[subject_id])\n                stream_string.push(\"subjects=\" + subj.join('+'))\n            # if $scope.cv.branch_id\n            #     stream_string.push(\"address=\" + _.find($scope.Branches, {id: parseInt($scope.cv.branch_id)}).code)\n            stream_string.join('_')\n\n        $scope.isSelected = (subject_id) ->\n                return false if not ($scope.cv and $scope.cv.subjects)\n                $scope.cv.subjects.indexOf(subject_id) isnt -1\n\n        $scope.selectSubject = (subject_id) ->\n            $scope.cv.subjects = [] if not $scope.cv.subjects\n            if $scope.isSelected subject_id\n                $scope.cv.subjects = _.without $scope.cv.subjects, subject_id\n            else\n                $scope.cv.subjects.push subject_id\n\n        $scope.selectedSubjectsList = ->\n            return false if not $scope.cv?.subjects?.length\n            subjects = []\n            for subject_id in $scope.cv.subjects\n                subjects.push $scope.Subjects[subject_id].name\n            subjects.join ', '","angular\n    .module 'App'\n    .controller 'Empty', ($scope, $timeout, $filter, $http, StreamService) ->\n        bindArguments($scope, arguments)\n\n        # для развертывания предметов на главной странице\n        # не нужно, чтобы отправлялось событие при свертывании\n        $scope.expand_items = {}\n        $scope.expandStream = (action, type) ->\n            # type = $scope.$eval \"'#{type}' | filter:cut:false:10\"\n            type = $filter('cut')(type, false, 20, '...')\n            $scope.expand_items[type] = not $scope.expand_items[type]\n            StreamService.run(action, type) if $scope.expand_items[type]\n\n        $timeout ->\n            # gallery methods\n            $scope.gallery = {}\n\n        $scope.initReviews = (count, min_score, grade, subject, university)->\n            $scope.search =\n                page: 1\n                count: count\n                min_score: min_score\n                grade: grade\n                subject: subject\n                university: university\n                ids: []\n            $scope.reviews = []\n            $scope.has_more_pages = true\n            searchReviews()\n\n        $scope.nextReviewsPage = ->\n            StreamService.run('all_reviews', 'more')\n            $scope.search.page++\n            searchReviews()\n\n        searchReviews = ->\n            $scope.searching_reviews = true\n            $http.get('/api/reviews/block?' + $.param($scope.search)).then (response) ->\n                $scope.searching_reviews = false\n                $scope.reviews = $scope.reviews.concat(response.data.reviews)\n                $scope.search.ids = _.pluck($scope.reviews, 'id')\n                $scope.has_more_pages = response.data.has_more_pages\n","angular\n    .module 'App'\n    .controller 'Gallery', ($scope, $timeout, StreamService) ->\n        bindArguments($scope, arguments)\n\n        angular.element(document).ready ->\n            $scope.all_photos = []\n            _.each $scope.groups, (group) ->\n                $scope.all_photos = $scope.all_photos.concat group.photo\n\n        $scope.openPhoto = (photo_id) ->\n            StreamService.run('photogallery', \"open_#{photo_id}\")\n            $scope.gallery.open($scope.getFlatIndex(photo_id))\n\n        $scope.getFlatIndex = (photo_id) ->\n            _.findIndex $scope.all_photos, id: photo_id\n","angular\n    .module 'App'\n    .constant 'REVIEWS_PER_PAGE', 5\n    .controller 'Landing', ($scope, $timeout, $http, StreamService, Tutor, REVIEWS_PER_PAGE, Subjects) ->\n        bindArguments($scope, arguments)\n\n        $timeout ->\n            initYoutube()\n            initTutors()\n\n        #\n        # REVIEWS\n        #\n        $scope.initReviews = (count, min_score, grade, subject, university)->\n            $scope.search_reviews =\n                page: 1\n                count: count\n                min_score: min_score\n                grade: grade\n                subject: subject\n                university: university\n                ids: []\n            $scope.reviews = []\n            $scope.has_more_pages = true\n            searchReviews()\n\n        $scope.nextReviewsPage = ->\n            StreamService.run('all_reviews', 'more')\n            $scope.search_reviews.page++\n            searchReviews()\n\n        searchReviews = ->\n            $scope.searching_reviews = true\n            $http.get('/api/reviews/block?' + $.param($scope.search_reviews)).then (response) ->\n                $scope.searching_reviews = false\n                $scope.reviews = $scope.reviews.concat(response.data.reviews)\n                $scope.search_reviews.ids = _.pluck($scope.reviews, 'id')\n                $scope.has_more_pages = response.data.has_more_pages\n\n\n\n        #\n        # TUTORS\n        #\n        initTutors = ->\n            $scope.tutors = []\n            $scope.tutors_page = 1\n            searchTutors()\n\n\n        $scope.tutorReviews = (tutor, index) ->\n            StreamService.run('tutor_reviews', tutor.id)\n            if tutor.all_reviews is undefined\n                tutor.all_reviews = Tutor.reviews\n                    id: tutor.id\n                , (response) ->\n                    $scope.showMoreReviews(tutor)\n            $scope.toggleShow(tutor, 'show_reviews', 'reviews', false)\n\n        $scope.showMoreReviews = (tutor, index) ->\n            tutor.reviews_page = if not tutor.reviews_page then 1 else (tutor.reviews_page + 1)\n            from = (tutor.reviews_page - 1) * REVIEWS_PER_PAGE\n            to = from + REVIEWS_PER_PAGE\n            tutor.displayed_reviews = tutor.all_reviews.slice(0, to)\n            # highlight('search-result-reviews-text')\n\n        $scope.reviewsLeft = (tutor) ->\n            return if not tutor.all_reviews or not tutor.displayed_reviews\n            reviews_left = tutor.all_reviews.length - tutor.displayed_reviews.length\n            if reviews_left > REVIEWS_PER_PAGE then REVIEWS_PER_PAGE else reviews_left\n\n\n        $scope.nextTutorsPage = ->\n            StreamService.run('load_more_tutors', $scope.tutors_page * 10)\n            $scope.tutors_page++\n            searchTutors()\n\n        searchTutors = ->\n            $scope.searching_tutors = true\n            Tutor.search\n                page: $scope.tutors_page\n                take: 4\n            , (response) ->\n                # search_count++\n                $scope.searching_tutors = false\n                $scope.tutors_data = response\n                $scope.tutors = $scope.tutors.concat(response.data)\n                # if $scope.mobile then $timeout -> bindToggle()\n\n        $scope.video = (tutor) ->\n            StreamService.run('tutor_video', tutor.id)\n            player.loadVideoById(tutor.video_link)\n            player.playVideo()\n            if isMobile\n                $('.fullscreen-loading-black').css('display', 'flex')\n            openModal('video')\n\n        # длительность видео\n        $scope.videoDuration = (tutor) ->\n            duration = parseInt(tutor.video_duration)\n            format = if duration >= 60 then 'm мин s сек' else 's сек'\n            moment.utc(duration * 1000).format(format)\n\n        # длительность видео в ISO\n        $scope.videoDurationISO = (tutor) ->\n            moment.duration(tutor.video_duration, 'seconds').toISOString()\n\n        # stream if index isnt null\n        $scope.toggleShow = (tutor, prop, iteraction_type, index = null) ->\n            if tutor[prop]\n                $timeout ->\n                    tutor[prop] = false\n                , if $scope.mobile then 400 else 0\n            else\n                tutor[prop] = true","angular\n    .module 'App'\n    .controller 'Order', ($scope, $timeout, $http, Grades, Subjects, Request, StreamService) ->\n        bindArguments($scope, arguments)\n        $timeout ->\n            # @todo: client_id, referer, referer_url, user agent\n            $scope.order = {}\n            $scope.popups = {}\n\n        $scope.filterPopup = (popup) ->\n            $scope.popups[popup] = true\n\n        $scope.select = (field, value) ->\n            $scope.order[field] = value\n            $scope.popups = {}\n\n        $scope.request = ->\n            $scope.sending = true\n            $scope.errors = {}\n            Request.save $scope.order, ->\n                StreamService.run('client_request', streamString())\n                dataLayerPush\n                    event: 'purchase'\n                    ecommerce:\n                        currencyCode: 'RUB'\n                        purchase:\n                            actionField:\n                                id: googleClientId()\n                            products: [\n                                # класс\n                                brand: $scope.order.grade\n                                # предметы_филиал\n                                category: (if $scope.order.subjects then $scope.order.subjects.sort().join(',') else '') + '_' + $scope.order.branch_id\n                                quantity: 1\n                            ]\n                $scope.sending = false\n                $scope.sent = true\n                $('body').animate scrollTop: $('.header').offset().top\n            , (response) ->\n                $scope.sending = false\n                angular.forEach response.data, (errors, field) ->\n                    $scope.errors[field] = errors\n                    selector = \"[ng-model$='#{field}']\"\n                    $('html,body').animate({scrollTop: $(\"input#{selector}, textarea#{selector}\").first().offset().top}, 0)\n                    input = $(\"input#{selector}, textarea#{selector}\")\n                    input.focus()\n                    input.notify errors[0], notify_options if isMobile\n                StreamService.run('client_request_attempt', response.data[Object.keys(response.data)[0]][0])\n\n        streamString = ->\n            stream_string = []\n            stream_string.push(\"class=#{$scope.order.grade}\") if $scope.order.grade\n            if $scope.order.subjects\n                subj = []\n                $scope.order.subjects.forEach (subject_id) -> subj.push(Subjects.short_eng[subject_id])\n                stream_string.push(\"subjects=\" + subj.join('+'))\n            if $scope.order.branch_id\n                stream_string.push(\"address=\" + _.find($scope.Branches, {id: parseInt($scope.order.branch_id)}).code)\n            stream_string.join('_')\n\n        $scope.isSelected = (subject_id) ->\n            return false if not ($scope.order and $scope.order.subjects)\n            $scope.order.subjects.indexOf(subject_id) isnt -1\n\n        $scope.selectSubject = (subject_id) ->\n            $scope.order.subjects = [] if not $scope.order.subjects\n            if $scope.isSelected subject_id\n                $scope.order.subjects = _.without $scope.order.subjects, subject_id\n            else\n                $scope.order.subjects.push subject_id\n\n        $scope.selectedSubjectsList = ->\n            return false if not $scope.order?.subjects?.length\n\n            subjects = []\n            for subject_id in $scope.order.subjects\n                subjects.push $scope.Subjects[subject_id].name\n\n            subjects.join ', '","angular\n    .module 'App'\n    .controller 'Programs', ($scope, $timeout) ->\n        $timeout ->\n            $scope.ready = true\n        , 300","angular\n    .module 'App'\n    .constant 'REVIEWS_PER_PAGE', 5\n    .controller 'Reviews', ($scope, $timeout, $http, Subjects, StreamService) ->\n        bindArguments($scope, arguments)\n\n        $timeout ->\n            $scope.reviews = []\n            $scope.page = 1\n            $scope.has_more_pages = true\n            search()\n\n        $scope.popup = (index) ->\n            $scope.show_review = index\n\n        $scope.nextPage = ->\n            StreamService.run('all_reviews', 'more')\n            $scope.page++\n            search()\n\n        # $scope.$watch 'page', (newVal, oldVal) -> $.cookie('page', $scope.page) if newVal isnt undefined\n\n        search = ->\n            $scope.searching = true\n            $http.get('/api/reviews?page=' + $scope.page).then (response) ->\n                console.log(response)\n                $scope.searching = false\n                $scope.reviews = $scope.reviews.concat(response.data.reviews)\n                $scope.has_more_pages = response.data.has_more_pages\n                # if $scope.mobile then $timeout -> bindToggle()\n","angular\n    .module 'App'\n    .controller 'Stats', ($scope, $timeout, $http, Subjects, Grades, AvgScores, StreamService) ->\n        bindArguments($scope, arguments)\n\n        $timeout ->\n            $scope.search = {page: 1, year: '2016'}\n            $scope.data = {}\n            $scope.show_review = null\n            $scope.filter()\n\n        $scope.changeSubject = ->\n            StreamService.run('subject_class_stats_set', $scope.search.subject_grade)\n            $scope.search.tutor_id = null\n            $scope.filter()\n\n        $scope.changeTutor = ->\n            StreamService.run('tutor_stats_set', $scope.search.tutor_id)\n            $scope.filter()\n\n        $scope.changeYear = ->\n            StreamService.run('year_stats_set', $scope.search.year)\n            $scope.filter()\n\n        $scope.popup = (index) ->\n            $scope.show_review = index\n\n        $scope.nextPage = ->\n            StreamService.run('load_more_results', $scope.search.page * 50)\n            $scope.search.page++\n            search()\n\n        $scope.filter = ->\n            $scope.search.page = 1\n            search()\n\n        $scope.getScoreLabel = ->\n            [subject_id, grade, profile] = $scope.search.subject_grade.split('-')\n            label = (if parseInt(grade) is 9 then 'ОГЭ' else 'ЕГЭ') + ' по ' + Subjects.dative[subject_id]\n            if (parseInt(subject_id) is 1 && parseInt(grade) >= 10)\n                if parseInt(grade) is 10\n                    label += ' (база)'\n                else\n                    label += if parseInt(profile) then ' (профиль)' else ' (база)'\n            label\n\n        # предмет-класс-(профиль/база?)\n        $scope.getSubjectsGrades = ->\n            if $scope.subject_grades is undefined\n                options = [\n                    id: '1-11-1'\n                    label: 'ЕГЭ математика (профиль)'\n                ,\n                    id: '1-11-0'\n                    label: 'ЕГЭ математика (база)'\n                ]\n\n                [11, 10, 9].forEach (grade) ->\n                    $.each Subjects.full, (subject_id, subject_name) ->\n                        return if (grade is 11 && parseInt(subject_id) == 1)\n                        subject_name = subject_name.toLowerCase()\n                        switch parseInt(grade)\n                            when 11 then grade_label = 'ЕГЭ'\n                            when 9 then grade_label = 'ОГЭ'\n                            else grade_label = \"#{grade} класс\"\n                        label = \"#{grade_label} #{subject_name}\"\n                        label += ' (база)' if (grade is 10 && parseInt(subject_id) is 1)\n                        options.push\n                            id: \"#{subject_id}-#{grade}\"\n                            label: label\n\n                $scope.subject_grades = options\n\n            $scope.subject_grades\n\n        search = ->\n            $scope.searching = true\n            $http.get('/api/stats?' + $.param($scope.search)).then (response) ->\n                console.log(response)\n                $scope.searching = false\n                if $scope.search.page is 1\n                    $scope.data = response.data\n                else\n                    $scope.data.has_more_pages = response.data.has_more_pages\n                    $scope.data.reviews = $scope.data.reviews.concat(response.data.reviews)\n                $timeout -> $('.custom-select').trigger('render')\n                if isMobile then $timeout -> bindToggle()\n","angular\n    .module 'App'\n    .constant 'REVIEWS_PER_PAGE', 5\n    .controller 'Tutors', ($scope, $timeout, $http, Tutor, REVIEWS_PER_PAGE, Subjects, StreamService) ->\n        bindArguments($scope, arguments)\n        initYoutube()\n\n        $scope.popups = {}\n\n        $scope.filterPopup = (popup) ->\n            $scope.popups[popup] = true\n            # openModal(\"filter-#{popup}\") if $scope.mobile\n            # StreamService.run('filter_open', popup)\n\n        # сколько загрузок преподавателей было\n        search_count = 0\n\n        # личная страница преподавателя?\n        $scope.profilePage = ->\n            RegExp(/^\\/tutors\\/[\\d]+$/).test(window.location.pathname)\n\n        # страница поиска\n        $timeout ->\n            $scope.search = {}\n            if not $scope.profilePage()\n                # SubjectService.init($scope.search.subjects)\n                # StreamService.run('landing', 'serp')\n                $scope.filter()\n\n        $scope.selectSubject = (id) ->\n            $scope.search.subject_id = id\n            $scope.popups = {}\n            $scope.subjectChanged()\n\n        $scope.reviews = (tutor, index) ->\n            StreamService.run('tutor_reviews', tutor.id)\n            #     position: $scope.getIndex(index)\n            #     tutor_id: tutor.id\n            if tutor.all_reviews is undefined\n                tutor.all_reviews = Tutor.reviews\n                    id: tutor.id\n                , (response) ->\n                    $scope.showMoreReviews(tutor)\n            $scope.toggleShow(tutor, 'show_reviews', 'reviews', false)\n\n        $scope.showMoreReviews = (tutor, index) ->\n            # if tutor.reviews_page then StreamService.run 'reviews_more', StreamService.identifySource(tutor),\n            #     position: $scope.getIndex(index)\n            #     tutor_id: tutor.id\n            #     depth: (tutor.reviews_page + 1) * REVIEWS_PER_PAGE\n            tutor.reviews_page = if not tutor.reviews_page then 1 else (tutor.reviews_page + 1)\n            from = (tutor.reviews_page - 1) * REVIEWS_PER_PAGE\n            to = from + REVIEWS_PER_PAGE\n            tutor.displayed_reviews = tutor.all_reviews.slice(0, to)\n            # highlight('search-result-reviews-text')\n\n        $scope.reviewsLeft = (tutor) ->\n            return if not tutor.all_reviews or not tutor.displayed_reviews\n            reviews_left = tutor.all_reviews.length - tutor.displayed_reviews.length\n            if reviews_left > REVIEWS_PER_PAGE then REVIEWS_PER_PAGE else reviews_left\n\n        $scope.subjectChanged = ->\n            StreamService.run('choose_tutor_subject', Subjects.short_eng[$scope.search.subject_id])\n            $scope.filter()\n\n        # чтобы не редиректило в начале\n        filter_used = false\n        $scope.filter = ->\n            $scope.tutors = []\n            $scope.page = 1\n            if filter_used\n                # StreamService.updateCookie({search: StreamService.cookie.search + 1})\n                # StreamService.run 'filter', null,\n                #     search: StreamService.cookie.search\n                #     subjects: $scope.SubjectService.getSelected().join(',')\n                #     sort: $scope.search.sort\n                #     station_id: $scope.search.station_id\n                #     place: $scope.search.place\n                # .then -> filter()\n                filter()\n            else\n                filter()\n                filter_used = true\n\n        filter = ->\n            search()\n            # деселект hidden_filter при смене параметров\n            # delete $scope.search.hidden_filter if $scope.search.hidden_filter and search_count\n            # $.cookie('search', JSON.stringify($scope.search))\n\n        $scope.nextPage = ->\n            StreamService.run('load_more_tutors', $scope.page * 10)\n            $scope.page++\n            search()\n\n        # $scope.$watch 'page', (newVal, oldVal) -> $.cookie('page', $scope.page) if newVal isnt undefined\n\n        search = ->\n            $scope.searching = true\n            Tutor.search\n                filter_used: filter_used\n                page: $scope.page\n                search: $scope.search\n            , (response) ->\n                search_count++\n                $scope.searching = false\n                $scope.data = response\n                $scope.tutors = $scope.tutors.concat(response.data)\n                # if $scope.mobile then $timeout -> bindToggle()\n\n        $scope.video = (tutor) ->\n            StreamService.run('tutor_video', tutor.id)\n            player.loadVideoById(tutor.video_link)\n            player.playVideo()\n            if isMobile\n                $('.fullscreen-loading-black').css('display', 'flex')\n            openModal('video')\n\n        # длительность видео\n        $scope.videoDuration = (tutor) ->\n            duration = parseInt(tutor.video_duration)\n            format = if duration >= 60 then 'm мин s сек' else 's сек'\n            moment.utc(duration * 1000).format(format)\n\n        # длительность видео в ISO\n        $scope.videoDurationISO = (tutor) ->\n            moment.duration(tutor.video_duration, 'seconds').toISOString()\n\n        # stream if index isnt null\n        $scope.toggleShow = (tutor, prop, iteraction_type, index = null) ->\n            if tutor[prop]\n                $timeout ->\n                    tutor[prop] = false\n                , if $scope.mobile then 400 else 0\n            else\n                tutor[prop] = true\n                # if index isnt false then StreamService.run iteraction_type, StreamService.identifySource(tutor),\n                #     position: $scope.getIndex(index)\n                #     tutor_id: tutor.id\n\n        #\n        # MOBILE\n        #\n        $scope.popup = (id, tutor = null, fn = null, index = null) ->\n            openModal(id)\n            if tutor isnt null then $scope.popup_tutor = tutor\n            if fn isnt null then $timeout -> $scope[fn](tutor, index)\n            # $scope.index = $scope.getIndex(index)\n","angular\n    .module 'App'\n    .controller 'Yachts', ($scope, $timeout, $http, Yacht) ->\n        bindArguments($scope, arguments)\n\n        $scope.popups = {}\n\n        # сколько загрузок было\n        search_count = 0\n\n        # страница поиска\n        $timeout ->\n            $scope.search = {}\n            if not $scope.profilePage()\n                $scope.filter()\n\n        # личная страница яхты?\n        $scope.profilePage = ->\n            RegExp(/^\\/yachts\\/[\\d]+$/).test(window.location.pathname)\n\n        # чтобы не редиректило в начале\n        filter_used = false\n        $scope.filter = ->\n            $scope.yachts = []\n            $scope.page = 1\n            if filter_used\n                filter()\n            else\n                filter()\n                filter_used = true\n\n        filter = ->\n            search()\n\n        $scope.nextPage = ->\n            # StreamService.run('load_more_yachts', $scope.page * 10)\n            $scope.page++\n            search()\n\n        search = ->\n            $scope.searching = true\n            Yacht.search\n                filter_used: filter_used\n                page: $scope.page\n                search: $scope.search\n            , (response) ->\n                search_count++\n                $scope.searching = false\n                $scope.data = response\n                $scope.yachts = $scope.yachts.concat(response.data)","angular.module('App')\n    # средний балл по Москве\n    .value 'AvgScores',\n        '1-11-1': 46.3\n        '2-11': 51.2\n        '3-11': 56.1\n        '4-11': 52.8\n        '5-11': 53\n        '6-11': 65.8\n        '7-11': 56\n        '8-11': 53.3\n        '9-11': 48.1\n        '10-11': 64.2\n        '11-11': 53\n    .value 'Grades',\n        # 1: '1 класс'\n        # 2: '2 класс'\n        # 3: '3 класс'\n        # 4: '4 класс'\n        # 5: '5 класс'\n        # 6: '6 класс'\n        # 7: '7 класс'\n        # 8: '8 класс'\n        9: '9 класс'\n        10: '10 класс'\n        11: '11 класс'\n        # 14: 'экстернат'\n    .value 'Subjects',\n        all:\n            1: 'математика',\n            2: 'физика',\n            3: 'химия',\n            4: 'биология',\n            5: 'информатика'\n            6: 'русский',\n            7: 'литература',\n            8: 'обществознание',\n            9: 'история',\n            10: 'английский',\n            11: 'география',\n        ,\n        full:\n            1: 'Математика'\n            2: 'Физика'\n            3: 'Химия'\n            4: 'Биология'\n            5: 'Информатика'\n            6: 'Русский язык'\n            7: 'Литература'\n            8: 'Обществознание'\n            9: 'История'\n            10: 'Английский язык'\n            11: 'География'\n        dative:\n            1: 'математике'\n            2: 'физике'\n            3: 'химии'\n            4: 'биологии'\n            5: 'информатике'\n            6: 'русскому языку'\n            7: 'литературе'\n            8: 'обществознанию'\n            9: 'истории'\n            10: 'английскому языку'\n            11: 'географии'\n        short: ['М', 'Ф', 'Р', 'Л', 'А', 'Ис', 'О', 'Х', 'Б', 'Ин', 'Г'],\n        three_letters:\n            1: 'МАТ'\n            2: 'ФИЗ'\n            3: 'ХИМ'\n            4: 'БИО'\n            5: 'ИНФ'\n            6: 'РУС'\n            7: 'ЛИТ'\n            8: 'ОБЩ'\n            9: 'ИСТ'\n            10: 'АНГ'\n            11: 'ГЕО'\n        short_eng:\n            1: 'math'\n            2: 'phys'\n            3: 'chem'\n            4: 'bio'\n            5: 'inf'\n            6: 'rus'\n            7: 'lit'\n            8: 'soc'\n            9: 'his'\n            10: 'eng'\n            11: 'geo'\n","angular.module('App')\n    .factory 'Tutor', ($resource) ->\n        $resource apiPath('tutors'), {id: '@id', type: '@type'},\n            search:\n                method: 'POST'\n                url: apiPath('tutors', 'search')\n            reviews:\n                method: 'GET'\n                isArray: true\n                url: apiPath('reviews')\n\n    .factory 'Yacht', ($resource) ->\n        $resource apiPath('yachts'), {id: '@id', type: '@type'},\n            search:\n                method: 'POST'\n                url: apiPath('yachts', 'search')\n\n    .factory 'Request', ($resource) ->\n        $resource apiPath('requests'), {id: '@id'}, updatable()\n\n    .factory 'Cv', ($resource) ->\n        $resource apiPath('cv'), {id: '@id'}, updatable()\n\n    .factory 'Stream', ($resource) ->\n        $resource apiPath('stream'), {id: '@id'}\n\napiPath = (entity, additional = '') ->\n    \"/api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\n\nupdatable = ->\n    update:\n        method: 'PUT'\ncountable = ->\n    count:\n        method: 'GET'\n","angular.module('App').directive 'academic', ->\n    restrict: 'E'\n    template: \"{{ year }}–{{ +(year) + 1 }}\"\n    scope:\n        year: '='\n","angular.module 'App'\n    .directive 'digitsOnly', ->\n        restrics:  'A'\n        require: 'ngModel'\n        link: ($scope, $element, $attr, $ctrl) ->\n            filter = (value) ->\n                return undefined if not value\n                new_value = value.replace /[^0-9]/g, ''\n                if new_value isnt value\n                    $ctrl.$setViewValue new_value\n                    $ctrl.$render()\n\n                value\n\n            $ctrl.$parsers?.push filter\n","angular.module('App').directive 'errors', ->\n    restrict: 'E'\n    templateUrl: '/directives/errors'\n    scope:\n        model: '@'\n    controller: ($scope, $element, $attrs) ->\n        $scope.only_first = $attrs.hasOwnProperty('onlyFirst')\n\n        $scope.getErrors = ->\n            return if $scope.$parent.errors is undefined\n            errors = $scope.$parent.errors[$scope.model]\n            return if not errors\n            if $scope.only_first then [errors[0]] else errors\n","# angular.module('Egerep').directive 'inView', ->\n#     restrict: 'A'\n#     scope:\n#         tutor: '=tutor'\n#         index: '=index'\n#     link: ($scope, $element, $attrs) ->\n#         # offset, чтобы было только при 100% видимости засчитывало\n#         # elementOffset.top += elementSize.height - 10\n#         $($element).on 'inview', (event, isInView) ->\n#             if isInView and $scope.$parent.viewed_tutors.indexOf($scope.tutor.id) is -1\n#                 $scope.$parent.viewed_tutors.push($scope.tutor.id)\n#                 $scope.$parent.StreamService.run 'view', $scope.$parent.StreamService.identifySource($scope.tutor),\n#                     tutor_id: $scope.tutor.id\n#                     position: $scope.index or null\n#                 $($element).off('inview')\n","angular.module('App').directive 'ngMark', ->\n    restrict: 'A'\n    scope:\n        word: '@'\n    controller: ($scope, $element, $attrs, $timeout) ->\n        $timeout ->\n            $($element).mark $scope.word,\n                separateWordSearch: true\n                accuracy:\n                    value: 'exactly'\n                    limiters: ['!', '@', '#', '&', '*', '(', ')', '-', '–', '—', '+', '=', '[', ']', '{', '}', '|', ':', ';', '\\'', '\\\"', '‘', '’', '“', '”', ',', '.', '<', '>', '/', '?']\n","angular.module('App')\n    .directive 'ngPhone', ->\n        restrict: 'A'\n        link: ($scope, element) ->\n            $(element).inputmask(\"+7 (999) 999-99-99\", { autoclear: false, showMaskOnHover: false })\n","angular.module 'App'\n    .directive 'plural', ->\n        restrict: 'E'\n        scope:\n            count: '='      # кол-во\n            type: '@'       # тип plural age | student | ...\n            noneText: '@'   # текст, если кол-во равно нулю\n        templateUrl: '/directives/plural'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\n\n            $scope.when =\n                'age': ['год', 'года', 'лет']\n                'student': ['ученик', 'ученика', 'учеников']\n                'minute': ['минуту', 'минуты', 'минут']\n                'hour': ['час', 'часа', 'часов']\n                'day': ['день', 'дня', 'дней']\n                'rubbles': ['рубль', 'рубля', 'рублей']\n                'client': ['клиент', 'клиента', 'клиентов']\n                'mark': ['оценки', 'оценок', 'оценок']\n                'review': ['отзыв', 'отзыва', 'отзывов']\n                'request': ['заявка', 'заявки', 'заявок']\n                'profile': ['анкета', 'анкеты', 'анкет']\n                'address': ['адрес', 'адреса', 'адресов']\n                'person': ['человек', 'человека', 'человек']\n                'ton': ['тонна', 'тонны', 'тонн']\n                'yacht': ['яхта', 'яхты', 'яхт']\n                'photo': ['фото', 'фотографии', 'фотографий']\n","angular\n    .module 'App'\n    .directive 'programItem', ->\n        templateUrl: '/directives/program'\n        scope:\n            item:   '='\n            level:  '=?'\n            levelstring: '='\n        controller: ($timeout, $element, $scope) ->\n            $scope.level = 0 if not $scope.level\n\n            $scope.getChildLevelString = (child_index) ->\n                str = if $scope.levelstring then $scope.levelstring else ''\n                str + (child_index + 1) + '.'","# angular.module('App')\n#     .directive 'requestForm', ->\n#         replace: true\n#         scope:\n#             tutor: '='\n#             sentIds: '='\n#             index: '='\n#         templateUrl: (elem, attrs) ->\n#             if attrs.hasOwnProperty('mobile') then '/directives/request-form-mobile' else '/directives/request-form'\n#         controller: ($scope, $element, $timeout, $rootScope, Request, Sources) ->\n#             # отправить заявку\n#             $scope.request = ->\n#                 $scope.tutor.request = {} if $scope.tutor.request is undefined\n#                 $scope.tutor.request.tutor_id = $scope.tutor.id\n#                 Request.save $scope.tutor.request, ->\n#                     $scope.tutor.request_sent = true\n#                     $scope.$parent.StreamService.run 'request', $scope.$parent.StreamService.identifySource($scope.tutor),\n#                         position: $scope.index or $scope.$parent.index\n#                         tutor_id: $scope.tutor.id\n#                     trackDataLayer()\n#                 , (response) ->\n#                     if response.status is 422\n#                         angular.forEach response.data, (errors, field) ->\n#                             selector = \"[ng-model$='#{field}']\"\n#                             $($element).find(\"input#{selector}, textarea#{selector}\").focus().notify errors[0], notify_options\n#                     else\n#                         $scope.tutor.request_error = true\n#\n#             trackDataLayer = ->\n#                 dataLayerPush\n#                     event: 'purchase'\n#                     ecommerce:\n#                         currencyCode: 'RUR'\n#                         purchase:\n#                             actionField:\n#                                 id: googleClientId()\n#                                 affiliation: $scope.$parent.StreamService.identifySource()\n#                                 revenue: $scope.tutor.public_price\n#                             products: [\n#                                 id: $scope.tutor.id\n#                                 price: $scope.tutor.public_price\n#                                 brand: $scope.tutor.subjects\n#                                 category: $scope.tutor.gender + '_' + $rootScope.yearsPassed($scope.tutor.birth_year) # пол_возраст\n#                                 quantity: 1\n#                             ]\n","angular.module 'App'\n    .service 'PhoneService', ->\n        # проверить перед отправкой форму\n        this.checkForm = (element)->\n            phone_element = $(element).find('.phone-field')\n\n            # номер телефона не заполнен полностью\n            if not isFull(phone_element.val())\n                phone_element.focus().notify 'номер телефона не заполнен полностью', notify_options\n                return false\n\n            # номер должен начинаться с 9 или 4\n            phone_number = phone_element.val().match(/\\d/g).join('')\n            if phone_number[1] != '4' and phone_number[1] != '9'\n                phone_element.focus().notify 'номер должен начинаться с 9 или 4', notify_options\n                return false\n            true\n\n        # номер телефона полный\n        isFull = (number) ->\n            return false if number is undefined or number is \"\"\n            !number.match(/_/)\n\n        this\n","angular.module 'App'\n    .service 'StreamService', ($http, $timeout, Stream) ->\n        this.identifySource = (tutor = undefined) ->\n            return 'similar' if tutor isnt undefined and tutor.is_similar\n            return 'tutor' if RegExp(/^\\/[\\d]+$/).test(window.location.pathname)\n            return 'help' if window.location.pathname is '/request'\n            return 'main' if window.location.pathname is '/'\n            return 'serp'\n\n        this.generateEventString = (params) ->\n            search = $.cookie('search')\n            if search isnt undefined then $.each JSON.parse(search), (key, value) ->\n                params[key] = value\n            parts = []\n            $.each params, (key, value) ->\n                switch key\n                    when 'sort'\n                        switch parseInt(value)\n                            when 2 then value = 'maxprice'\n                            when 3 then value = 'minprice'\n                            when 4 then value = 'rating'\n                            when 5 then value = 'bymetro'\n                            else value = 'pop'\n                    when 'place'\n                        switch parseInt(params.place)\n                            when 1 then where = 'tutor'\n                            when 2 then where = 'client'\n                            else where = 'any'\n                return if key in ['action', 'type', 'google_id', 'yandex_id', 'id', 'hidden_filter'] or not value\n                parts.push(key + '=' + value)\n            return parts.join('_')\n\n        this.updateCookie = (params) ->\n            this.cookie = {} if this.cookie is undefined\n            $.each params, (key, value) =>\n                this.cookie[key] = value\n            $.cookie('stream', JSON.stringify(this.cookie), { expires: 365, path: '/' })\n\n        this.initCookie = ->\n            if $.cookie('stream') isnt undefined\n                this.cookie = JSON.parse($.cookie('stream'))\n            else\n                this.updateCookie({step: 0, search: 0})\n\n        this.run = (action, type, additional = {}) ->\n            this.initCookie() if this.cookie is undefined\n            if not this.initialized\n                $timeout =>\n                    this._run(action, type, additional)\n                , 1000\n            else\n                this._run(action, type, additional)\n\n        this._run = (action, type, additional = {}) ->\n            this.updateCookie({step: this.cookie.step + 1})\n\n            params =\n                action: action\n                type: type\n                step: this.cookie.step\n                google_id: googleClientId()\n                yandex_id: yaCounter8061652.getClientID()\n                mobile: if (typeof isMobile is 'undefined') then '0' else '1'\n\n            $.each additional, (key, value) =>\n                params[key] = value\n\n            if action isnt 'page' then dataLayerPush\n                event: 'configuration'\n                eventCategory: action\n                eventAction: type\n            Stream.save(params).$promise\n\n        this"],"sourceRoot":"/source/"}